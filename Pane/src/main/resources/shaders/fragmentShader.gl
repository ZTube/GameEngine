#version 130

in vec2 pass_textureCoords;
in vec3 surfaceNormal;
in vec3 toLightVector;
in vec3 dirLightVector;

out vec4 out_color;

uniform sampler2D textureSampler;
uniform vec3 pointLightColor;
uniform vec3 dirLightColor;

void main(void) {

    vec3 unitNormal = normalize(surfaceNormal);
    vec3 unitPointLight = normalize(toLightVector);

    vec3 unitDirLight = normalize(dirLightVector);

    float nDot1 = dot(unitNormal, unitPointLight);
    float brightness1 = max(nDot1, 0.0);

    float nDot2 = dot(unitNormal, unitDirLight);
    float brightness2 = max(nDot2, 0.0);

    vec3 diffuse1 = brightness1 * pointLightColor;
    vec3 diffuse2 = brightness2 * dirLightColor;

    out_color = vec4(diffuse1, 1) * texture(textureSampler, pass_textureCoords);
}